name: WebDriver Test Automation

on:
#  push:
#    branches: [ main, develop ]
#  pull_request:
#    branches: [ main, develop ]
  workflow_dispatch:
env:
  JAVA_VERSION: '25'
  
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chrome, firefox]

    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v4

      - name: ‚òï Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: üì¶ Cache Maven Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
            
            
      - name: üåê Install Google Chrome via apt
        run: |
          sudo apt-get update
          sudo apt-get install -y wget gnupg
          wget -qO- https://dl.google.com/linux/linux_signing_key.pub | sudo gpg --dearmor -o /usr/share/keyrings/google-linux-signing-keyring.gpg
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/google-linux-signing-keyring.gpg] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: ‚ùå Remove conflicting chromedriver from PATH
        run: |
          sudo apt-get remove -y chromedriver || true
          sudo rm -f /usr/bin/chromedriver || true
          which chromedriver || echo "OK: no chromedriver in PATH"

      - name: ‚úÖ Verify Chrome
        run: |
          google-chrome --version
          which google-chrome
          google-chrome --headless=new --dump-dom "data:text/html,ok"

      - name: üåê Setup Firefox
        if: matrix.browser == 'firefox'
        uses: browser-actions/setup-firefox@latest

      - name: ‚úÖ Verify Firefox Installation
        if: matrix.browser == 'firefox'
        run: |
          firefox --version
          which firefox




      - name: Run Tests
        env:
          CI: "true"
        run: mvn clean test -Dbrowser=${{ matrix.browser }} -Dmode=headless  -Dsurefire.reportFormat=xml

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.browser }}
          path: |
            target/surefire-reports/
            target/extent-reports/
            target/screenshots/

      - name: Publish Test Report
        if: always()
        uses: mikepenz/action-junit-report@v3
        with:
          report_paths: 'target/surefire-reports/*.xml'
          check_name: 'Test Results (${{ matrix.browser }})'
